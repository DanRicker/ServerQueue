//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Drp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DrpServerQueue {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DrpServerQueue() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Drp.Properties.DrpServerQueue", typeof(DrpServerQueue).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*
        ///
        ///    Copyright 2016 Daniel Ricker III and Peoplutions
        ///
        ///The core &quot;Acquire Operations&quot; made at the lowest system level possible to
        ///1) Remove as much network latency as possible from the &quot;transaction&quot; processing.
        ///2) Move Exception Processing to as close to the operation as possible.
        ///3) Move Retry Attempts to as close to the operation as possible.
        ///
        ///Attempts to &quot;Acquire&quot; an Enqueued Item in a Transaction.
        ///   - Delete Existing Enqueued Item
        ///   - Add new Acquired Item
        ///   - Update QueueItem with Ac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spQueueItemAcquire {
            get {
                return ResourceManager.GetString("spQueueItemAcquire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*
        ///
        ///    Copyright 2016 Daniel Ricker III and Peoplutions
        ///
        ///The core &quot;Acquire Operations&quot; made at the lowest system level possible to
        ///1) Remove as much network latency as possible from the &quot;transaction&quot; processing.
        ///2) Move Exception Processing to as close to the operation as possible.
        ///3) Move Retry Attempts to as close to the operation as possible.
        ///
        ///Attempts to &quot;Acquire&quot; an Enqueued Item in a Transaction.
        ///   - Delete Existing Enqueued Item
        ///   - Add new Acquired Item
        ///   - Update QueueItem with Ac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spQueueItemAcquireSpecific {
            get {
                return ResourceManager.GetString("spQueueItemAcquireSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///    Copyright 2016 Daniel Ricker III and Peoplutions
        ///
        ///The core &quot;Acquire Operations&quot; made at the lowest system level possible to
        ///1) Remove as much network latency as possible from the &quot;transaction&quot; processing.
        ///2) Move Exception Processing to as close to the operation as possible.
        ///
        ///Attempts to Dequeue an Acquired Item in a Transaction.
        ///   - Delete Existing Acquired State Item
        ///   - Add new Dequeued State Item
        ///   - Delete Existing Queue Item
        ///   - Add new QueueHistory Item
        ///
        ///The &quot;Delete&quot; is the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spQueueItemDequeue {
            get {
                return ResourceManager.GetString("spQueueItemDequeue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///    Copyright 2016 Daniel Ricker III and Peoplutions
        ///
        ///Enqueue and new Item in a transaction
        ///		1) Insert into ServerQueueItem new QueueItem
        ///		2) Insert into ServerQueueEnqueuedItem new QueueStateItem
        ///
        ///DROP PROCEDURE [dbo].[spQueueItemEnqueue];
        ///
        ///GO
        ///
        ///SET ANSI_NULLS ON
        ///GO
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///*/
        ///
        ///CREATE PROCEDURE [dbo].[spQueueItemEnqueue]
        ///    @itemId NVARCHAR(255) = NULL,
        ///	@itemType NVARCHAR(255) = NULL,
        ///    @itemData NVARCHAR(MAX),
        ///    @itemMetadata NVARCHAR(MAX)
        ///AS
        ///
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spQueueItemEnqueue {
            get {
                return ResourceManager.GetString("spQueueItemEnqueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*
        ///
        ///    Copyright 2016 Daniel Ricker III and Peoplutions
        ///
        ///The core &quot;Release Operations&quot; made at the lowest system level possible to
        ///1) Remove as much network latency as possible from the &quot;transaction&quot; processing.
        ///2) Move Exception Processing to as close to the operation as possible.
        ///
        ///Attempts to &quot;Release&quot; an Acquired Item in a Transaction.
        ///   - Delete Existing Acquired Item
        ///   - Add new Enqueued Item
        ///
        ///The &quot;Delete&quot; is the point of failure. An Acquired Item can only be deleted once.
        /// This ensur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spQueueItemRelease {
            get {
                return ResourceManager.GetString("spQueueItemRelease", resourceCulture);
            }
        }
    }
}
